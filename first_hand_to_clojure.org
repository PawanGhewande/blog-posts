#+BLOG: carlfg.wordpress.com
#+POSTID: 12
#+DATE: [2013-10-18 Fri 20:20]
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil TeX:nil
#+CATEGORY: blogs
#+TAGS: clojure 
#+DESCRIPTION: Starting Clojure
#+TITLE: First hand to Clojure

*Clojure* has been around for couple of years now. It has been
recognized for its features like functional programming, elegance,
lisp and JMV support. Unlike many popular dynamic languages, it is
fast and written to take advantages of all optimizations possible with
modern JVMs.

#+HTML: <!--more-->

I personally like clojure because it is lisp. Lisp has very tiny
language core with almost no syntax and has a powerful macro support.
With this brief introduction lets start setting up Clojure.

** lein
   
   Before we start programming in Clojure, lets setup
   leiningen. Leiningen is for automatic Clojure project setup which
   will create all necessary file required for any Clojure project.
   
   - Download *lein* binary file from [[https://raw.github.com/technomancy/leiningen/stable/bin/lein][Github]] and copy it to your
     =~/bin/= directory.
     #+BEGIN_SRC sh
       wget https://raw.github.com/technomancy/leiningen/stable/bin/lein
     #+END_SRC sh
   - Add =~/bin= PATH in your =~/.bashrc=
     #+BEGIN_SRC sh
       export PATH=~/bin:$PATH
     #+END_SRC sh
   - Make the binary executable
     #+BEGIN_SRC sh
       chmod a+x ~/bin/lein
     #+END_SRC sh
   - Finally run the self installer
     #+BEGIN_SRC sh
       lein
     #+END_SRC sh

*** Lein configuration
    - Lein version-2 uses the idea of /profiles/. The location of file
      is =~/.lein/profiles.clj=. Create this file if it not exist.

    - Sample =profiles.clj= file
      #+BEGIN_SRC clojure
       {:user {:plugins [[lein-difftest "1.3.8"]
                         [lein-marginalia "0.7.1"]
                         [lein-pprint "1.1.1"]
                         [lein-swank "1.4.5"]
                         [lein-exec "0.3.0"]
                         [lein-ring "0.8.7"]]}}
      #+END_SRC clojure
      
      You can see all the required libraries which are default to all
      my Clojure projects.

*** Upgrade
    - To upgrade lein to its latest stable version use,
      #+BEGIN_SRC sh
        lein upgrade
      #+END_SRC sh

** Project/App
*** Create a project or an app.
    - Create a project using
      #+BEGIN_SRC sh
        lein new my-project
      #+END_SRC sh

    - Create an app using
      
      #+BEGIN_SRC sh
        lein new app my-stuff
      #+END_SRC sh
    
    - Create a noir project(=noir= is a plugin web framework)
      #+BEGIN_SRC sh
        lein new noir my-web-project
      #+END_SRC sh

*** REPL
    REPL(Read-Eval-Print-Loop) can be your excellent interpreter or
    debugger while you work on a Clojure project. You can run REPL
    once you create a project.
    - Lets say the project name is =my-stuff=, go to project directory
      and run REPL using
      #+BEGIN_SRC sh
      cd my-stuff
      lein repl
      #+END_SRC sh
    
    - Inside =repl= prompt, run =(-main)=
      #+BEGIN_SRC clojure
      my-stuff.core=> (-main)
      #+END_SRC clojure

    - If you have done some change in a code, reload it
      #+BEGIN_SRC clojure
      my-stuff.core=> (require 'my-stuff.core :reload)
      #+END_SRC clojure

    - Run a program using =lein= (Outside the REPL prompt.)
      #+BEGIN_SRC sh
      lein run
      #+END_SRC sh

    - If you are happy with your app, package it into an executable
      =jar=
      #+BEGIN_SRC sh
      lein uberjar
      #+END_SRC sh

    - And run =jar= file using
      #+BEGIN_SRC sh
      java -jar target/my-stuff-0.1.0-standalone.jar
      #+END_SRC sh

** Library
   A Clojure library can be created in a same way.
*** Create
    #+BEGIN_SRC sh
    lein new default my-lib
    #+END_SRC sh
*** REPL
    #+BEGIN_SRC sh
    $ lein repl
    ...
    #+END_SRC sh
    
    Inside a REPL prompt(These are sample queries)
    #+BEGIN_SRC clojure
    user=> (require 'my-lib.core)
    nil
    user=> (ns my-lib.core)
    nil
    my-lib.core=> (my-func 3)
    9
    #+END_SRC clojure

** Dependencies
   - Add project dependencies to =~/.lein/profiles.clj= or
     =your-app/project.clj=

     Below is my sample =profiles.clj= file
     #+BEGIN_SRC clojure
       {:user {:plugins [[lein-difftest "1.3.8"]
                         [lein-marginalia "0.7.1"]
                         [lein-pprint "1.1.1"]
                         [lein-swank "1.4.5"]
                         [lein-exec "0.3.0"]
                         [lein-ring "0.8.7"]]}}
     #+END_SRC clojure

   - Or you can have it specific to the project
     #+BEGIN_SRC clojure
       (defproject perfect-clojure "0.1.0-SNAPSHOT"
         :description "A simple clojure app to test my environment"
         :url "http://clojuremadesimple.co.uk"
         :license {:name "Eclipse Public License"
                   :url "http://google.co.uk"}
         :dependencies [[org.clojure/clojure "1.3.0"]]
         :dev-dependencies [[midje "1.4.0"]
                            [autodoc "0.9.0"]]
                           
         :plugins [[lein-swank "1.4.4"]]
         )
     #+END_SRC clojure

   - And setup dependencies using
     #+BEGIN_SRC sh
       lein deps
     #+END_SRC sh

** Compile
   - Compile your project in to an executable =jar= using 
     #+BEGIN_SRC sh
       lein uberjar
     #+END_SRC sh
    
** Run
   Run the standalone jar using
    #+BEGIN_SRC sh
      java -jar target/my-stuff-0.1.0-SNAPSHOT-standalone.jar
    #+END_SRC sh

** Connecting to REPL server
   - A new REPL server is started at http://localhost:PORT when you invoke
     #+BEGIN_SRC sh
       lein repl
     #+END_SRC sh
     from a project directory.

   - You can connect to existing server using
     #+BEGIN_SRC sh
       lein repl :connect nrepl://localhost:PORT
     #+END_SRC sh

     for example
     #+BEGIN_SRC sh
       lein repl :connect nrepl://127.0.0.1:37451
     #+END_SRC sh

** Generate documentation
   - install =marginalia=
     #+BEGIN_SRC sh
     cd ~/.lein
     touch profiles.clj
     #+END_SRC sh

   - Add following line to =profiles.clj= (=marginalia= version may be
     different)
     #+BEGIN_SRC clojure
     {:user {:plugins [[lein-marginalia "0.7.1"]]}}
     #+END_SRC clojure

   - Then, in your project 
     #+BEGIN_SRC sh
     cd /path/to/project/
     #+END_SRC sh

   - Install using
     #+BEGIN_SRC sh
       lein deps
     #+END_SRC sh
     
   - Generate docs
     #+BEGIN_SRC sh
     lein marg
     #+END_SRC sh

   - Browse docs in path using web-browser
     #+BEGIN_SRC sh
     file://path/to/my-proj/docs/uberdoc.html
     #+END_SRC sh

** References
   - [[http://www.unexpected-vortices.com/clojure/brief-beginners-guide/]]
   - [[http://clojuremadesimple.co.uk/]]


